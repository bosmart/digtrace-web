{"version":3,"sources":["webpack:///./src/app/pages/jobs/associated-jobs/associated-jobs.component.css","webpack:///./src/app/pages/jobs/associated-jobs/associated-jobs.component.html","webpack:///./src/app/pages/jobs/associated-jobs/associated-jobs.component.ts","webpack:///./src/app/pages/jobs/job-create/job-create.component.css","webpack:///./src/app/pages/jobs/job-create/job-create.component.html","webpack:///./src/app/pages/jobs/job-create/job-create.component.ts","webpack:///./src/app/pages/jobs/job-description/job-description.component.css","webpack:///./src/app/pages/jobs/job-description/job-description.component.html","webpack:///./src/app/pages/jobs/job-description/job-description.component.ts","webpack:///./src/app/pages/jobs/job-update/job-update.component.css","webpack:///./src/app/pages/jobs/job-update/job-update.component.html","webpack:///./src/app/pages/jobs/job-update/job-update.component.ts","webpack:///./src/app/pages/jobs/jobs-root/jobs-root.component.css","webpack:///./src/app/pages/jobs/jobs-root/jobs-root.component.html","webpack:///./src/app/pages/jobs/jobs-root/jobs-root.component.ts","webpack:///./src/app/pages/jobs/jobs-route.module.ts","webpack:///./src/app/pages/jobs/jobs.module.ts"],"names":[],"mappings":"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","file":"3.js","sourcesContent":["module.exports = \"\"","module.exports = \"<div class=\\\"container mt-4\\\" *ngIf=\\\"showComponent\\\">\\n    \\n  <div *ngIf=\\\"jobSubmitErrors\\\" class=\\\"alert alert-block alert-danger\\\"> \\n    <ul class=\\\"m-0\\\" [ngStyle]=\\\"{'padding-left':'20px'}\\\"> \\n      <li *ngFor=\\\"let warning of jobSubmitErrors\\\">\\n        {{warning}}\\n      </li> \\n    </ul> \\n  </div>\\n\\n  <h4 class=\\\"text-center font-weight-bold mb-5\\\" [ngStyle]=\\\"{'text-decoration':'underline'}\\\">\\n    Associated Jobs/Group Jobs\\n  </h4>\\n\\n  <div *ngFor=\\\"let job of groupJobsInfo\\\" class=\\\"mt-1 mb-4\\\">\\n    <h5 class=\\\"text-center mb-3\\\"><strong>Job Name: </strong>{{job.job_name}}</h5>\\n    <p class=\\\"d-flex justify-content-center\\\">\\n      <span class=\\\"mr-3\\\"><strong>Job Created: </strong>{{job.job_date_created}}</span>\\n      <span class=\\\"ml-3\\\"><strong>Job Updated: </strong>{{job.job_date_updated}}</span>\\n    </p>   \\n\\n    <div class=\\\"row d-flex justify-content-center mb-3\\\">\\n      <button name=\\\"viewDetailBtn\\\" routerLink=\\\"/jobs/job-description/{{jobId}}\\\" type=\\\"submit\\\" class=\\\"btn btn-outline-custom mx-1 mx-md-3 my-2\\\">        \\n        View Detail\\n      </button>\\n      <button name=\\\"jobDeleteBtn\\\" (click)=\\\"deleteJob()\\\" name=\\\"deleteBtn\\\" type=\\\"submit\\\" class=\\\"btn btn-outline-danger mx-1 mx-md-3 my-2\\\">\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\" fill=\\\"currentColor\\\" class=\\\"bi bi-trash\\\" viewBox=\\\"0 0 16 16\\\">\\n          <path d=\\\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\\\"/>\\n          <path fill-rule=\\\"evenodd\\\" d=\\\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\\\"/>\\n        </svg>\\n        Delete\\n      </button>\\n      <button name=\\\"jobModifyBtn\\\" routerLink=\\\"/jobs/update-job/{{jobId}}\\\" type=\\\"submit\\\" class=\\\"btn btn-outline-custom mx-1 mx-md-3 my-2\\\">\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\" fill=\\\"currentColor\\\" class=\\\"bi bi-pencil\\\" viewBox=\\\"0 0 16 16\\\">\\n          <path d=\\\"M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5L13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175l-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z\\\"/>\\n        </svg>\\n        Modify\\n      </button>\\n      <button name=\\\"jobSubmitBtn\\\" type=\\\"submit\\\" (click)=\\\"jobSubmit(job)\\\" class=\\\"btn btn-outline-custom mx-1 mx-md-3 my-2\\\">\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\" fill=\\\"currentColor\\\" class=\\\"bi bi-box-arrow-in-right\\\" viewBox=\\\"0 0 16 16\\\">\\n          <path fill-rule=\\\"evenodd\\\" d=\\\"M6 3.5a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-8a.5.5 0 0 1-.5-.5v-2a.5.5 0 0 0-1 0v2A1.5 1.5 0 0 0 6.5 14h8a1.5 1.5 0 0 0 1.5-1.5v-9A1.5 1.5 0 0 0 14.5 2h-8A1.5 1.5 0 0 0 5 3.5v2a.5.5 0 0 0 1 0v-2z\\\"/>\\n          <path fill-rule=\\\"evenodd\\\" d=\\\"M11.854 8.354a.5.5 0 0 0 0-.708l-3-3a.5.5 0 1 0-.708.708L10.293 7.5H1.5a.5.5 0 0 0 0 1h8.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3z\\\"/>\\n        </svg>\\n        Submit\\n      </button>\\n    </div>\\n\\n    <div *ngFor=\\\"let collection of job.userImagesCollection\\\" class=\\\"mb-4\\\">        \\n      <p><strong>Image Project Name: </strong>{{collection.title}}</p>\\n      <p><strong>Image Project Uploaded Date: </strong>{{collection.date_uploaded}}</p>                  \\n      <div class=\\\"row\\\">            \\n        <div class=\\\"col-6 col-md-3 col-lg-2 gallery-img\\\" *ngFor=\\\"let imageData of collection.images\\\">\\n          <a [href]=\\\"apiRoot + imageData.image\\\">\\n            <img [src]=\\\"apiRoot+imageData.image_thumbnail\\\" class=\\\"img-thumbnail mb-4 position-relative\\\">\\n          </a>\\n          <button class=\\\"btn btn-danger btn-sm rounded-0 position-absolute delete-btn\\\" (click)=\\\"deleteImage(imageData)\\\">\\n            <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\" fill=\\\"currentColor\\\" class=\\\"bi bi-trash\\\" viewBox=\\\"0 0 16 16\\\">\\n              <path d=\\\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\\\"/>\\n              <path fill-rule=\\\"evenodd\\\" d=\\\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\\\"/>\\n            </svg>\\n          </button>\\n        </div>          \\n      </div>\\n      <button class=\\\"btn btn-custom\\\" *ngIf=\\\"collection.has_more_images\\\"\\n              routerLink=\\\"/images/view-images/{{collection.id}}\\\"\\n      >\\n        View More\\n      </button>          \\n    </div> \\n    <ng-template [ngIf]=\\\"groupJobsInfo.indexOf(job)<groupJobsInfo.length-1\\\">\\n      <hr/>\\n    </ng-template>\\n  </div>  \\n</div>\\n\\n<div *ngIf=\\\"!showComponent\\\" class=\\\"text-center mt-4\\\">\\n  {{errorMsg}}\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiService } from 'src/app/services/api.service';\nimport { DataSharingService } from 'src/app/services/data-sharing.service';\nimport { ConfirmJobSubmitComponent } from 'src/app/shared/components/confirm-job-submit/confirm-job-submit.component';\nimport { DeleteJobModalComponent } from 'src/app/shared/components/delete-job-modal/delete-job-modal.component';\n\n@Component({\n  selector: 'app-associated-jobs',\n  templateUrl: './associated-jobs.component.html',\n  styleUrls: ['./associated-jobs.component.css']\n})\nexport class AssociatedJobsComponent implements OnInit {\n\n  jobId\n  groupJobsInfo\n  totalPageCount\n  itemActive\n  totalItems\n  apiRoot\n  showComponent\n  errorMsg\n  jobSubmitErrors\n\n  constructor(private apiService:ApiService, private router:Router, private activatedRoute: ActivatedRoute, private snackBar:MatSnackBar, private dialog: MatDialog,private dataSharingService: DataSharingService) { }\n\n  ngOnInit() {\n    this.apiRoot = this.apiService.apiRoot\n    this.activatedRoute.paramMap.subscribe(params=>{\n      this.jobId=params.get('id')\n      this.apiService.callApi(`/api/job/${this.jobId}/group-jobs/`)\n      .subscribe({\n          next:res=>{\n               this.groupJobsInfo = res['data']\n               this.showComponent = res['code']==200 && true      \n          },\n          error:res=>{\n            this.errorMsg=res.error.errors[0]\n            this.showComponent=false\n          }\n       })\n    })    \n  }\n  \n  deleteJob(){\n    this.dialog.open(DeleteJobModalComponent).afterClosed()\n    .subscribe(res=>{\n      if(res==='confirm'){\n        this.apiService.callApi(`/api/job/${this.jobId}/delete/`,'DELETE')    \n        .subscribe({\n            next:res=>{\n              this.snackBar.open('Job successfully deleted',\"Dismiss\",{\n                duration:3000,\n                horizontalPosition:'right',\n                verticalPosition:'bottom',           \n                panelClass:['snackbar-delete']         \n              })          \n              this.dataSharingService.changeData('jobDeleted')                    \n              this.apiService.callApi(`/api/job/${this.jobId}/group-jobs/`)\n              .subscribe(res=>{\n                this.groupJobsInfo = res['data']                \n              })              \n            },\n            error:res=>console.log(res)\n        })  \n      }\n    })      \n  }  \n\n  jobSubmit(job){    \n    let headers = {\"Content-Type\":\"application/json\"}\n\n    this.dialog.open(ConfirmJobSubmitComponent,{\n      data:{        \n        jobId: this.jobId\n      }\n    }).afterClosed()\n    .subscribe(res=>{      \n      if(res.value==='confirm'){\n        let body = {\n          \"job_submit\": res.checkValue,\n          \"job_id\": this.jobId\n        }\n        this.apiService.callApi(`/api/job/${this.jobId}/submit/`,'POST',body,headers)\n        .subscribe({\n          next: res=>{\n              this.snackBar.open('Job submission successful',\"Dismiss\",{\n                duration:3000,\n                horizontalPosition:'center',\n                verticalPosition:'bottom',           \n                panelClass:['snackbar-submit']         \n              })              \n              this.router.navigateByUrl(`/jobs/job-description/${this.jobId}`)\n          },\n          error: res =>{\n            this.jobSubmitErrors = res.error.errors        \n            window.scroll(0,0)    \n          }\n        })\n      }\n    })\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container card card-body shadow fs-14\\\">\\n  \\n  <div *ngIf=\\\"jobCreateErrors\\\" class=\\\"alert alert-block alert-danger\\\"> \\n    <ul class=\\\"m-0\\\" [ngStyle]=\\\"{'padding-left':'20px'}\\\"> \\n      <li *ngFor=\\\"let warning of jobCreateErrors\\\">\\n        {{warning}}\\n      </li> \\n    </ul> \\n  </div>\\n\\n  <h4 class=\\\"mb-4 text-center\\\">Create a new job</h4>\\n  <form [formGroup]=\\\"jobCreateForm\\\" (ngSubmit)=\\\"submitJob()\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-12 col-md-6\\\">\\n        <div class=\\\"form-group mb-4\\\">\\n          <label for=\\\"jobName\\\">Job name*</label>\\n          <input type=\\\"text\\\" class=\\\"form-control border border-custom fs-14\\\" formControlName=\\\"jobName\\\">          \\n          <small *ngIf=\\\"jobName.invalid && (jobName.touched || allAlerts)\\\"\\n                  class=\\\"text-danger ml-1\\\"\\n          >\\n              Job name is required\\n          </small>\\n        </div>\\n      </div>\\n      <div class=\\\"col-12 col-md-6\\\">\\n        <div class=\\\"form-group mb-4\\\">\\n          <label for=\\\"jobDesc\\\">Job description</label>\\n          <input type=\\\"text\\\" class=\\\"form-control border border-custom fs-14\\\" formControlName=\\\"jobDesc\\\">\\n        </div>\\n      </div>\\n    </div>\\n  \\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-12 col-md-6\\\">\\n        <div class=\\\"form-group mb-4\\\">\\n          <label for=\\\"selectImageCollection\\\">Image project*</label>\\n          <select multiple formControlName=\\\"selectImageCollection\\\" class=\\\"form-control border border-custom fs-14\\\">\\n            <option value=\\\"\\\" [disabled]=\\\"true\\\">Choose a Image Project</option>\\n            <option *ngFor=\\\"let collection of imageCollections\\\" [ngValue]=\\\"collection.id\\\">\\n              {{collection.title}}\\n            </option>\\n          </select>\\n          <small class=\\\"form-text text-muted\\\">Hold control and left-click to select mutiple. To unselect also hold control and left-click.</small>\\n          <small *ngIf=\\\"selectImageCollection.invalid && (selectImageCollection.touched || allAlerts)\\\"\\n                 class=\\\"text-danger ml-1\\\"\\n          >\\n          You need to select at least one image poject.\\n          </small>\\n        </div>\\n      </div>\\n      <div class=\\\"col-12 col-md-6\\\">\\n        <div class=\\\"form-group mb-4\\\">\\n          <label for=\\\"selectGenModel\\\">Gen model*</label>\\n          <select formControlName=\\\"selectGenModel\\\" class=\\\"form-control border border-custom fs-14\\\">\\n            <option value=\\\"\\\">Choose a Generator Model</option>\\n            <option *ngFor=\\\"let model of genModels\\\" [ngValue]=\\\"model[1]\\\">\\n              {{model[0]}}\\n            </option>\\n          </select>\\n          <small *ngIf=\\\"selectGenModel.invalid && (selectGenModel.touched || allAlerts)\\\"\\n           class=\\\"text-danger ml-1\\\"\\n          >\\n          You need to select a generation model\\n          </small>\\n        </div>\\n      </div>\\n    </div>\\n  \\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-12 col-md-6\\\">\\n        <div class=\\\"form-group form-check mb-4\\\">\\n          <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" formControlName=\\\"checkFocalLen\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"checkFocalLen\\\">Force focal len calc</label>\\n          <small class=\\\"form-text text-muted\\\">Calculate focal len even if sensor size exists in the database</small>\\n        </div>\\n      </div>\\n      <div class=\\\"col-12 col-md-6\\\">\\n        <div class=\\\"form-group mb-4\\\">\\n          <label for=\\\"focalLen\\\">Focal len</label>\\n          <input type=\\\"text\\\" class=\\\"form-control border border-custom fs-14\\\" formControlName=\\\"focalLen\\\" >\\n          <small class=\\\"form-text text-muted\\\">Only if force focal len calculation is false</small>\\n        </div>\\n      </div>\\n    </div>\\n  \\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-12 col-md-6\\\">\\n        <div class=\\\"form-group mb-4\\\">\\n          <label for=\\\"selectSurfaceRecon\\\">Surface recon*</label>\\n          <select class=\\\"form-control border border-custom fs-14\\\" formControlName=\\\"selectSurfaceRecon\\\">\\n            <option value=\\\"\\\">Choose Surface Recon</option>\\n            <option *ngFor=\\\"let recon of surfaceRecons\\\" [ngValue]=\\\"recon[1]\\\">\\n              {{recon[0]}}\\n            </option>\\n          </select>\\n          <small *ngIf=\\\"selectSurfaceRecon.invalid && (selectSurfaceRecon.touched || allAlerts)\\\"\\n           class=\\\"text-danger ml-1\\\"\\n          >\\n          You need to select Surface reconstruction\\n          </small>\\n        </div>\\n      </div>\\n      <div class=\\\"col-12 col-md-6\\\">\\n        <div class=\\\"form-group mb-4\\\">\\n          <label for=\\\"surfaceReconDepth\\\">Surface recon depth*</label>\\n          <input type=\\\"text\\\" class=\\\"form-control border border-custom fs-14\\\" formControlName=\\\"surfaceReconDepth\\\">\\n          <small *ngIf=\\\"surfaceReconDepth.invalid && (surfaceReconDepth.touched || allAlerts)\\\"\\n           class=\\\"text-danger ml-1\\\"\\n          >\\n          You need to select surface reconstruction depth\\n          </small>\\n        </div>\\n      </div>\\n    </div>\\n  \\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-12 col-md-6\\\">\\n        <div class=\\\"form-group form-check mb-4\\\">\\n          <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" formControlName=\\\"checkSurfaceReconColor\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"surfaceReconColour\\\">Surface recon colour</label>\\n          <small class=\\\"form-text text-muted\\\">Whether or not to have colour on the surface recon ply</small>\\n        </div>\\n      </div>\\n      <div class=\\\"col-12 col-md-6\\\">\\n        <div class=\\\"form-group mb-4\\\">\\n          <label for=\\\"poissonSampleRate\\\">Poisson recon sample per node </label>\\n          <input type=\\\"text\\\" class=\\\"form-control border border-custom fs-14\\\" formControlName=\\\"poissonSampleRate\\\">\\n          <small class=\\\"form-text text-muted\\\">Only if PoissonRecon is selected</small>\\n        </div>\\n      </div>\\n    </div>\\n  \\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-12 col-md-6\\\">\\n        <div class=\\\"form-group form-check mb-4\\\">\\n          <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" formControlName=\\\"checkPoissonReconDensity\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"checkPoissonReconDensity\\\">Poisson recon density</label>\\n          <small class=\\\"form-text text-muted\\\">Only if PoissonRecon is selected. Select to output density if you wish to trim</small>\\n        </div>\\n      </div>\\n      <div class=\\\"col-12 col-md-6\\\">\\n        <div class=\\\"form-group mb-4\\\">\\n          <label for=\\\"ssdReconDegree\\\">Ssd recon degree</label>\\n          <input type=\\\"text\\\" class=\\\"form-control border border-custom fs-14\\\" formControlName=\\\"ssdReconDegree\\\">\\n          <small class=\\\"form-text text-muted\\\">Only if SSDRecon is selected</small>\\n        </div>\\n      </div>\\n    </div>\\n  \\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-12 col-md-6\\\">\\n        <div class=\\\"form-group form-check mb-4\\\">\\n          <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" formControlName=\\\"checkSurfaceTrim\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"checkSurfaceTrim\\\">Surface trim</label>\\n          <small class=\\\"form-text text-muted\\\">Trim surface? Only valid for Poisson reconstruction with density output</small>\\n        </div>\\n      </div>\\n      <div class=\\\"col-12 col-md-6\\\">\\n        <div class=\\\"form-group mb-4\\\">\\n          <label for=\\\"surfaceTrimThreshold\\\">Surface trim trim threshold</label>\\n          <input type=\\\"text\\\" class=\\\"form-control border border-custom fs-14\\\" formControlName=\\\"surfaceTrimThreshold\\\">\\n          <small class=\\\"form-text text-muted\\\">Only if Surface trim is selected</small>\\n        </div>\\n      </div>\\n    </div>\\n  \\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-12 col-md-6\\\">\\n        <div class=\\\"form-group form-check mb-4\\\">\\n          <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" formControlName=\\\"checkPolygonMesh\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"checkPolygonMesh\\\">Surface trim polygon mesh</label>\\n          <small class=\\\"form-text text-muted\\\">Only if Surface trim is selected</small>\\n        </div>\\n      </div>\\n      <div class=\\\"col-12 col-md-6\\\">\\n        <div class=\\\"form-group mb-4\\\">\\n          <label for=\\\"surfaceTrimSmooth\\\">Surface trim smooth</label>\\n            <input type=\\\"text\\\" class=\\\"form-control border border-custom fs-14\\\" formControlName=\\\"surfaceTrimSmooth\\\">\\n          <small class=\\\"form-text text-muted\\\">Only if Surface trim is selected</small>\\n        </div>\\n      </div>\\n    </div>\\n  \\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-12 col-md-6\\\">\\n        <div class=\\\"form-group mb-4\\\">\\n          <label for=\\\"jobNote\\\">Job note</label>\\n          <input type=\\\"text\\\" class=\\\"form-control border border-custom fs-14\\\" formControlName=\\\"jobNote\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"col-12 col-md-6\\\">\\n        <div class=\\\"form-group mb-4\\\">\\n          <label for=\\\"selectJobPriority\\\">Job priority*</label>\\n          <select class=\\\"form-control border border-custom fs-14\\\" formControlName=\\\"selectJobPriority\\\">\\n            <option value=\\\"\\\">Choose Job Priority</option>\\n            <option *ngFor=\\\"let jobPriority of jobPriorities\\\" [ngValue]=\\\"jobPriority[1]\\\">\\n              {{jobPriority[0]}}\\n            </option>\\n          </select>\\n          <small *ngIf=\\\"selectJobPriority.invalid && (selectJobPriority.touched || allAlerts)\\\"\\n                  class=\\\"text-danger ml-1\\\"\\n          >\\n          You need to select a job priority\\n          </small>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-outline-custom w-25 mx-auto my-4\\\">\\n        Create\\n      </button>\\n    </div>\\n  </form>    \\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ApiService } from 'src/app/services/api.service';\nimport { DataSharingService } from 'src/app/services/data-sharing.service';\n\n@Component({\n  selector: 'app-job-create',\n  templateUrl: './job-create.component.html',\n  styleUrls: ['./job-create.component.css']\n})\nexport class JobCreateComponent implements OnInit {\n\n  constructor(private apiService: ApiService, private fb: FormBuilder, private router:Router, private dataSharingService: DataSharingService) { }\n\n  jobCreateForm: FormGroup\n  \n  imageCollections\n  genModels=[['Global','GLB'],['Sequential','SEQ']]\n  surfaceRecons=[['Poisson Reconstruction','PR'],['SSD Reconstruction','SR']]\n  jobPriorities=[['High','H'],['Medium','M'],['Low','L']]\n\n  payloadData\n  allAlerts:boolean=false\n  jobCreateErrors\n\n  headers= {\n    \"Content-Type\":\"application/json\"\n  }\n\n  ngOnInit():void {                \n\n    this.jobCreateForm = this.fb.group({\n       jobName:['',[Validators.required,Validators.minLength(1)]],\n       jobDesc:[''],\n       selectImageCollection:[[],[Validators.required]],\n       selectGenModel:['GLB',[Validators.required]],\n       checkFocalLen:[true],\n       focalLen:[''],\n       selectSurfaceRecon:['PR',[Validators.required]],\n       surfaceReconDepth:['10',[Validators.required]],       \n       checkSurfaceReconColor:[true],\n       poissonSampleRate:['1.0'],\n       checkPoissonReconDensity:[false],\n       ssdReconDegree:['2'],\n       checkSurfaceTrim:[false],\n       surfaceTrimThreshold:['0.5'],\n       checkPolygonMesh:[false],\n       surfaceTrimSmooth:['5'],\n       jobNote:[''],\n       selectJobPriority:['M',[Validators.required]]\n    })       \n    \n    this.apiService.callApi('/api/job/create/','GET')\n    .subscribe(res=>{\n       let data = res['data']\n       this.imageCollections = res['data'].userImagesCollection\n      //  this.jobCreateForm.patchValue({\n      //    selectGenModel:data.gen_model,\n      //    checkFocalLen:data.force_focal_len_calc,\n      //    selectSurfaceRecon:data.surface_recon,\n      //     surfaceReconDepth:data.surface_recon_depth,\n      //     checkSurfaceReconColor:data.surface_recon_colour,\n      //     poissonSampleRate:data.poisson_recon_sample_per_node,          \n      //     ssdReconDegree:data.ssd_recon_degree,          \n      //     surfaceTrimThreshold:data.surface_trim_trim_threshold,          \n      //     surfaceTrimSmooth:data.surface_trim_smooth,          \n      //     selectJobPriority:data.job_priority\n      //  })\n      //  this.jobCreateForm.updateValueAndValidity()\n       \n    })\n    \n    this.dataSharingService.getData().subscribe(res=>{\n      if(res.imageId){        \n        this.jobCreateForm.patchValue({\n          selectImageCollection: [+res.imageId]\n        })\n        this.jobCreateForm.updateValueAndValidity()\n      }\n    })    \n  }\n\n  get jobName(){\n    return this.jobCreateForm.get('jobName')\n  }\n  get selectImageCollection(){\n    return this.jobCreateForm.get('selectImageCollection')\n  }\n  get selectGenModel(){\n    return this.jobCreateForm.get('selectGenModel')\n  }\n  get selectSurfaceRecon(){\n    return this.jobCreateForm.get('selectSurfaceRecon')\n  }\n  get surfaceReconDepth(){\n    return this.jobCreateForm.get('surfaceReconDepth')\n  }\n  get selectJobPriority(){\n    return this.jobCreateForm.get('selectJobPriority')\n  }\n\n  submitJob(){      \n    if(this.jobCreateForm.invalid){\n      this.allAlerts = true\n      return null\n    }\n\n    this.payloadData={\n      job_name: this.jobCreateForm.value.jobName,\n      job_description: this.jobCreateForm.value.jobDesc,\n      userImagesCollection: this.jobCreateForm.value.selectImageCollection, \n      gen_model: this.jobCreateForm.value.selectGenModel,\n      force_focal_len_calc: this.jobCreateForm.value.checkFocalLen,\n      focal_len: this.jobCreateForm.value.focalLen,\n      surface_recon:this.jobCreateForm.value.selectSurfaceRecon,\n      surface_recon_depth:this.jobCreateForm.value.surfaceReconDepth,           \n      surface_recon_colour: this.jobCreateForm.value.checkSurfaceReconColor,      \n      poisson_recon_sample_per_node: this.jobCreateForm.value.poissonSampleRate,\n      poisson_recon_density: this.jobCreateForm.value.checkPoissonReconDensity,\n      ssd_recon_degree: this.jobCreateForm.value.ssdReconDegree,\n      surface_trim: this.jobCreateForm.value.checkSurfaceTrim,\n      surface_trim_trim_threshold: this.jobCreateForm.value.surfaceTrimThreshold,\n      surface_trim_polygon_mesh: this.jobCreateForm.value.checkPolygonMesh,\n      surface_trim_smooth: this.jobCreateForm.value.surfaceTrimSmooth,\n      job_note: this.jobCreateForm.value.jobNote,\n      job_priority: this.jobCreateForm.value.selectJobPriority\n    }        \n\n    this.apiService.callApi('/api/job/create/','POST',JSON.stringify(this.payloadData),this.headers)\n    .subscribe({\n      next:res=>{    \n        this.dataSharingService.changeData('jobCreated')   \n        this.router.navigate([`/jobs/job-description/${res['data'].job_id}`])\n      },\n      error:res=>{\n        this.jobCreateErrors = res.error.errors\n        window.scroll(0,0)\n      }\n    })\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<ng-template [ngIf]=\\\"showComponent\\\">\\n  <div class=\\\"container\\\">\\n\\n    <div *ngIf=\\\"jobSubmitErrors\\\" class=\\\"alert alert-block alert-danger\\\"> \\n      <ul class=\\\"m-0\\\" [ngStyle]=\\\"{'padding-left':'20px'}\\\"> \\n        <li *ngFor=\\\"let warning of jobSubmitErrors\\\">\\n          {{warning}}\\n        </li> \\n      </ul> \\n    </div>\\n    \\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-header\\\">\\n        <div class=\\\"row d-flex justify-content-center\\\">\\n          <button name=\\\"jobDeleteBtn\\\" (click)=\\\"deleteJob()\\\" name=\\\"deleteBtn\\\" type=\\\"submit\\\" class=\\\"btn btn-outline-danger mx-1 mx-md-3 my-2\\\">\\n            <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\" fill=\\\"currentColor\\\" class=\\\"bi bi-trash\\\" viewBox=\\\"0 0 16 16\\\">\\n              <path d=\\\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\\\"/>\\n              <path fill-rule=\\\"evenodd\\\" d=\\\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\\\"/>\\n            </svg>\\n            Delete\\n          </button>\\n          <button name=\\\"jobModifyBtn\\\" routerLink=\\\"/jobs/update-job/{{jobId}}\\\" type=\\\"submit\\\" class=\\\"btn btn-outline-custom mx-1 mx-md-3 my-2\\\">\\n            <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\" fill=\\\"currentColor\\\" class=\\\"bi bi-pencil\\\" viewBox=\\\"0 0 16 16\\\">\\n              <path d=\\\"M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5L13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175l-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z\\\"/>\\n            </svg>\\n            Modify\\n          </button>\\n          <button name=\\\"jobSubmitBtn\\\" type=\\\"submit\\\" (click)=\\\"jobSubmit()\\\" \\n                  class=\\\"btn btn-outline-custom mx-1 mx-md-3 my-2\\\"\\n          >\\n            <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\" fill=\\\"currentColor\\\" class=\\\"bi bi-box-arrow-in-right\\\" viewBox=\\\"0 0 16 16\\\">\\n              <path fill-rule=\\\"evenodd\\\" d=\\\"M6 3.5a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-8a.5.5 0 0 1-.5-.5v-2a.5.5 0 0 0-1 0v2A1.5 1.5 0 0 0 6.5 14h8a1.5 1.5 0 0 0 1.5-1.5v-9A1.5 1.5 0 0 0 14.5 2h-8A1.5 1.5 0 0 0 5 3.5v2a.5.5 0 0 0 1 0v-2z\\\"/>\\n              <path fill-rule=\\\"evenodd\\\" d=\\\"M11.854 8.354a.5.5 0 0 0 0-.708l-3-3a.5.5 0 1 0-.708.708L10.293 7.5H1.5a.5.5 0 0 0 0 1h8.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3z\\\"/>\\n            </svg>\\n            Submit\\n          </button>\\n          <button name=\\\"associatedJobsBtn\\\" type=\\\"submit\\\" class=\\\"btn btn-outline-custom mx-1 mx-md-3 my-2\\\"\\n                  *ngIf=\\\"jobInfo.is_group_job_head\\\" routerLink=\\\"/jobs/associated-jobs/{{jobId}}\\\"\\n          >            \\n            Associated Jobs\\n          </button>\\n        </div>\\n        <div *ngIf=\\\"jobInfo.is_group_job_head\\\" [ngStyle]=\\\"{'text-align':'center','margin-top':'5px'}\\\"> \\n          <mark [ngStyle]=\\\"{'background':'#fcf8e3','padding-left':'10px'}\\\">(This is a group job, Click Associated Jobs for Status and PLY files)</mark>\\n        </div>\\n      </div>\\n      \\n      <div class=\\\"card-body\\\">\\n        <table class=\\\"table table-hover mb-4\\\">\\n          <tbody>\\n            <tr *ngIf=\\\"jobInfo.job_meta\\\">\\n              <td scope=\\\"row\\\">Remote job processor status</td>\\n              <td>:</td>\\n              <td>{{jobInfo.host_job_status}}</td>\\n            </tr>\\n            <tr *ngIf=\\\"jobInfo.job_meta\\\">\\n              <td scope=\\\"row\\\">Remote job queue</td>\\n              <td>:</td>\\n              <td>{{jobInfo.host_job_queue}}</td>\\n            </tr>\\n            <tr>\\n              <td scope=\\\"row\\\">Job name</td>\\n              <td>:</td>\\n              <td>{{jobInfo.job_name}}</td>\\n            </tr>\\n            <tr>\\n              <td scope=\\\"row\\\">Job Submited?</td>\\n              <td>:</td>\\n              <td>{{jobInfo.job_submit}}</td>\\n            </tr>\\n            <tr *ngIf=\\\"!jobInfo.is_group_job_head\\\">\\n              <td scope=\\\"row\\\">Job Status code</td>\\n              <td>:</td>\\n              <td>\\n                {{jobInfo.job_status}}<br/>\\n                ({{jobInfo.job_status_message}})\\n              </td>\\n            </tr>            \\n            <!-- <tr *ngIf=\\\"jobInfo.job_meta\\\">\\n              <td scope=\\\"row\\\">remote job processing status</td>\\n              <td>:</td>\\n              <td></td>\\n            </tr> -->\\n            <tr>\\n              <td scope=\\\"row\\\">Job description</td>\\n              <td>:</td>\\n              <td>{{jobInfo.job_description}}</td>\\n            </tr>\\n            <tr>\\n              <td scope=\\\"row\\\">Generator Model</td>\\n              <td>:</td>\\n              <td>{{jobInfo.gen_model}}</td>\\n            </tr>\\n            <tr>\\n              <td scope=\\\"row\\\">Force calculate focal length</td>\\n              <td>:</td>\\n              <td>{{jobInfo.force_focal_len_calc}}</td>\\n            </tr>\\n            <tr>\\n              <td scope=\\\"row\\\">Focal length</td>\\n              <td>:</td>\\n              <td>{{jobInfo.focal_len}}</td>\\n            </tr>\\n            <tr>\\n              <td scope=\\\"row\\\">Reconstruct surface using</td>\\n              <td>:</td>\\n              <td>{{jobInfo.surface_recon}}</td>\\n            </tr>\\n            <tr>\\n              <td scope=\\\"row\\\">Poisson recon sample per node</td>\\n              <td>:</td>\\n              <td>{{jobInfo.poisson_recon_sample_per_node}}</td>\\n            </tr>\\n            <tr>\\n              <td scope=\\\"row\\\">Use Poisson recon density?</td>\\n              <td>:</td>\\n              <td>{{jobInfo.poisson_recon_density}}</td>\\n            </tr>\\n            <tr>\\n              <td scope=\\\"row\\\">SSD recon degree</td>\\n              <td>:</td>\\n              <td>{{jobInfo.ssd_recon_degree}}</td>\\n            </tr>\\n            <tr>\\n              <td scope=\\\"row\\\">Surface trim?</td>\\n              <td>:</td>\\n              <td>{{jobInfo.surface_trim}}</td>\\n            </tr>\\n            <tr>\\n              <td scope=\\\"row\\\">Use polygon mesh for surface trimming?</td>\\n              <td>:</td>\\n              <td>{{jobInfo.surface_trim_polygon_mesh}}</td>\\n            </tr>\\n            <tr>\\n              <td scope=\\\"row\\\">Smooth parameter for surface trim</td>\\n              <td>:</td>\\n              <td>{{jobInfo.surface_trim_smooth}}</td>\\n            </tr>\\n            <tr>\\n              <td scope=\\\"row\\\">Job note</td>\\n              <td>:</td>\\n              <td>{{jobInfo.job_note}}</td>\\n            </tr>\\n            <tr>\\n              <td scope=\\\"row\\\">Job priority level</td>\\n              <td>:</td>\\n              <td>{{jobInfo.job_priority}}</td>\\n            </tr>\\n            <tr>\\n              <td scope=\\\"row\\\">Job created</td>\\n              <td>:</td>\\n              <td>{{jobInfo.job_date_created}}</td>\\n            </tr>\\n            <tr>\\n              <td scope=\\\"row\\\">Job updated</td>\\n              <td>:</td>\\n              <td>{{jobInfo.job_date_updated}}</td>\\n            </tr>\\n            <tr>\\n              <td scope=\\\"row\\\">Job finished?</td>\\n              <td>:</td>\\n              <td>{{jobInfo.job_finished}}</td>\\n            </tr>\\n          </tbody>\\n        </table>      \\n\\n        <div *ngIf=\\\"jobInfo.ply_files.length>0\\\" class=\\\"mb-4\\\">\\n          <p><strong>Associated Model Files: </strong></p>\\n          <p class=\\\"container row\\\" *ngFor=\\\"let file of jobInfo.ply_files\\\">\\n            <span class=\\\"mr-1\\\">\\n              {{jobInfo.ply_files.indexOf(file)+1+'.'}}\\n            </span>            \\n            <a href={{apiRoot+file.path}}>\\n              {{file.title}}\\n            </a>            \\n          </p>\\n        </div>\\n\\n        <div *ngFor=\\\"let collection of jobInfo.userImagesCollection\\\" class=\\\"mb-4\\\">        \\n          <p><strong>Image Project Name: </strong>{{collection.title}}</p>\\n          <p><strong>Image Project Uploaded Date: </strong>{{collection.date_uploaded}}</p>                  \\n          <div class=\\\"row\\\">            \\n            <div class=\\\"col-6 col-md-3 col-lg-2 gallery-img\\\" *ngFor=\\\"let imageData of collection.images\\\">\\n              <a [href]=\\\"apiRoot + imageData.image\\\">\\n                <img [src]=\\\"apiRoot+imageData.image_thumbnail\\\" class=\\\"img-thumbnail mb-4 position-relative\\\">\\n              </a>\\n              <button class=\\\"btn btn-danger btn-sm rounded-0 position-absolute delete-btn\\\" (click)=\\\"deleteImage(imageData)\\\">\\n                <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\" fill=\\\"currentColor\\\" class=\\\"bi bi-trash\\\" viewBox=\\\"0 0 16 16\\\">\\n                  <path d=\\\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\\\"/>\\n                  <path fill-rule=\\\"evenodd\\\" d=\\\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\\\"/>\\n                </svg>\\n              </button>\\n            </div>          \\n          </div>\\n          <button class=\\\"btn btn-custom\\\" *ngIf=\\\"collection.has_more_images\\\"\\n                  routerLink=\\\"/images/view-images/{{collection.id}}\\\"\\n          >\\n            View More\\n          </button>          \\n        </div>                            \\n      </div>  \\n    </div>\\n  </div>\\n</ng-template>\\n\\n<div *ngIf=\\\"!showComponent\\\" class=\\\"text-center mt-4\\\">\\n  {{errorMsg}}\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material';\n\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiService } from 'src/app/services/api.service';\nimport { DataSharingService } from 'src/app/services/data-sharing.service';\nimport { ConfirmJobSubmitComponent } from 'src/app/shared/components/confirm-job-submit/confirm-job-submit.component';\nimport { DeleteImageModalComponent } from 'src/app/shared/components/delete-image-modal/delete-image-modal.component';\nimport { DeleteJobModalComponent } from 'src/app/shared/components/delete-job-modal/delete-job-modal.component';\n\n\n@Component({\n  selector: 'app-job-description',\n  templateUrl: './job-description.component.html',\n  styleUrls: ['./job-description.component.css']\n})\nexport class JobDescriptionComponent implements OnInit {  \n  \n  jobInfo   \n  jobId\n  jobSubmitErrors  \n  showComponent\n  errorMsg\n\n  hPos:MatSnackBarHorizontalPosition = 'right'\n  vPos:MatSnackBarVerticalPosition = 'bottom'\n\n  constructor(private activatedRoute: ActivatedRoute,private apiService:ApiService,private router: Router,private snackBar:MatSnackBar, private dialog: MatDialog,private dataSharingService: DataSharingService) {}    \n\n  apiRoot = this.apiService.apiRoot\n  \n  ngOnInit() {    \n    this.activatedRoute.paramMap.subscribe(params=>{ \n      this.jobSubmitErrors = \"\"     \n      this.jobId=params.get('id')\n      this.apiService.callApi(`/api/job/${params.get('id')}/details/`)\n        .subscribe({\n            next:res=>{\n              this.jobInfo=res['data']\n              this.showComponent = res['code']==200 && true\n            },\n            error:res=>{\n              this.errorMsg = res.error.errors[0]\n              this.showComponent = false\n            }\n      })      \n    })\n  }\n\n  jobSubmit(){    \n    let headers = {\"Content-Type\":\"application/json\"}\n\n    this.dialog.open(ConfirmJobSubmitComponent,{\n      data:{        \n        jobId: this.jobId\n      }\n    }).afterClosed()\n    .subscribe(res=>{      \n      if(res.value==='confirm'){\n        let body = {\n          \"job_submit\": res.checkValue,\n          \"job_id\": this.jobId\n        }\n        this.apiService.callApi(`/api/job/${this.jobId}/submit/`,'POST',body,headers)\n        .subscribe({\n          next: res=>{\n              this.snackBar.open('Job submission successful',\"Dismiss\",{\n                duration:3000,\n                horizontalPosition:this.hPos,\n                verticalPosition:this.vPos,           \n                panelClass:['snackbar-submit']         \n              })\n              this.apiService.callApi(`/api/job/${this.jobId}/details`)\n              .subscribe({\n                next:res=>{\n                  this.showComponent = res['code']==200 && true\n                  this.jobInfo = res['data']\n                },\n                error:res=>{                  \n                  this.errorMsg = res.error.errors[0];\n                  this.showComponent = false\n                }\n              })\n          },\n          error: res =>{            \n            if(res['status']==400){\n              this.jobSubmitErrors = res.error.errors\n            }\n            else{\n              this.errorMsg = res.error.errors[0]\n              this.showComponent = false\n            }           \n          }\n        })\n      }\n    })\n  }\n\n  deleteJob(){\n    this.dialog.open(DeleteJobModalComponent).afterClosed()\n    .subscribe(res=>{\n      if(res==='confirm'){\n        this.apiService.callApi(`/api/job/${this.jobId}/delete/`,'DELETE')    \n        .subscribe({\n            next:res=>{\n              this.snackBar.open('Job successfully deleted',\"Dismiss\",{\n                duration:3000,\n                horizontalPosition:this.hPos,\n                verticalPosition:this.vPos,           \n                panelClass:['snackbar-delete']         \n              })       \n                this.dataSharingService.changeData(`jobDeleted`)          \n                this.router.navigate([`/jobs`])\n            },\n            error:res=>{\n              this.snackBar.open(res.error.errors[0]+'!',\"\",{\n                duration:1000,\n                horizontalPosition:'center',\n                verticalPosition:'bottom',           \n                panelClass:['alert-warning','text-dark','snackbar-delete-denied']         \n              })\n            }\n        })  \n      }\n    })      \n  }  \n\n  deleteImage(imageData){\n    this.dialog.open(DeleteImageModalComponent).afterClosed()\n    .subscribe(res=>{\n      if(res==='confirm'){\n        this.apiService.callApi(`/api/image-collection/image/${imageData.id}/delete/`,'DELETE')\n        .subscribe({\n          next:res=>{\n            this.snackBar.open('Image successfully deleted',\"Dismiss\",{\n              duration:3000,\n              horizontalPosition:this.hPos,\n              verticalPosition:this.vPos,           \n              panelClass:['snackbar-delete']         \n            })\n            this.apiService.callApi(`/api/job/${this.jobId}/details/`)\n              .subscribe({\n                  next:res=>{\n                    this.jobInfo=res['data']\n                  },\n                  error:res=>console.log(res)\n              })    \n            this.dataSharingService.changeData('imageDeleted')\n          },\n          error:res=>{\n            this.snackBar.open(res.error.errors[0]+'!',\"\",{\n              duration:1000,\n              horizontalPosition:'center',\n              verticalPosition:'bottom',           \n              panelClass:['alert-warning','text-dark','snackbar-delete-denied']         \n            })\n          }\n        })\n      }\n    })    \n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container card card-body shadow fs-14\\\" *ngIf=\\\"showComponent\\\">\\n  <div *ngIf=\\\"updateSubmitErrors\\\" class=\\\"alert alert-block alert-danger\\\"> \\n    <ul class=\\\"m-0\\\" [ngStyle]=\\\"{'padding-left':'20px'}\\\"> \\n      <li *ngFor=\\\"let warning of updateSubmitErrors\\\">\\n        {{warning}}\\n      </li> \\n    </ul> \\n  </div>\\n  <h4 class=\\\"mb-4 text-center alert\\\">Edit job</h4>\\n  <form [formGroup]=\\\"jobUpdateForm\\\" (ngSubmit)=\\\"updateJob()\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-12 col-md-6\\\">\\n        <div class=\\\"form-group mb-4\\\">\\n          <label for=\\\"jobName\\\">Job Name*</label>\\n          <input formControlName=\\\"jobName\\\" type=\\\"text\\\" class=\\\"form-control border border-custom fs-14\\\" placeholder=\\\"Enter job name\\\">\\n          <small *ngIf=\\\"jobName.invalid && (jobName.touched || allAlerts)\\\"\\n                  class=\\\"text-danger ml-1\\\"\\n          >\\n              Job name is required\\n          </small>\\n        </div>\\n      </div>\\n      <div class=\\\"col-12 col-md-6\\\">\\n        <div class=\\\"form-group mb-4\\\">\\n          <label for=\\\"jobDesc\\\">Job Description</label>\\n          <input type=\\\"text\\\" class=\\\"form-control border border-custom fs-14\\\" formControlName=\\\"jobDesc\\\" placeholder=\\\"Enter job description\\\">\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-12 col-md-6\\\">\\n        <div class=\\\"form-group mb-4\\\">\\n          <label for=\\\"selectImageCollection\\\">Image Project</label>\\n          <select formControlName=\\\"selectImageCollection\\\" multiple class=\\\"form-control border border-custom fs-14\\\">            \\n            <option *ngFor=\\\"let collection of imageCollections\\\" [ngValue]=\\\"collection.id\\\">\\n              {{collection.title}}\\n            </option>\\n          </select>\\n          <small class=\\\"form-text text-muted\\\">Hold control and left-click to select mutiple. To unselect also hold control and left-click.</small>          \\n          <small *ngIf=\\\"selectImageCollection.invalid && (selectImageCollection.touched || allAlerts)\\\"\\n                 class=\\\"text-danger ml-1\\\"\\n          >\\n          You need to select at least one image poject.\\n          </small>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-12 col-md-6\\\">\\n        <div class=\\\"form-group mb-4\\\">\\n          <label for=\\\"selectGenModel\\\">Gen model*</label>\\n          <select formControlName=\\\"selectGenModel\\\" class=\\\"form-control border border-custom fs-14\\\">            \\n            <option *ngFor=\\\"let model of genModels\\\" [ngValue]=\\\"model[1]\\\">\\n              {{model[0]}}\\n            </option>\\n          </select>\\n          <small *ngIf=\\\"selectGenModel.invalid && (selectGenModel.touched || allAlerts)\\\"\\n           class=\\\"text-danger ml-1\\\"\\n          >\\n          You need to select a generation model\\n          </small>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-12 col-md-6\\\">\\n        <div class=\\\"form-group form-check mb-4\\\">\\n          <input formControlName=\\\"checkFocalLen\\\" type=\\\"checkbox\\\" class=\\\"form-check-input\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"checkFocalLen\\\">Force focal len calc</label>\\n          <small class=\\\"form-text text-muted\\\">Calculate focal len even if sensor size exists in the database</small>\\n        </div>\\n      </div>\\n      <div class=\\\"col-12 col-md-6\\\">\\n        <div class=\\\"form-group mb-4\\\">\\n          <label for=\\\"focalLen\\\">Focal Len</label>\\n          <input formControlName=\\\"focalLen\\\" type=\\\"text\\\" class=\\\"form-control border border-custom fs-14\\\">\\n          <small class=\\\"form-text text-muted\\\">Only if force focal len calculation is false</small>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-12 col-md-6\\\">\\n        <div class=\\\"form-group mb-4\\\">\\n          <label for=\\\"selectSurfaceRecon\\\">Surface recon*</label>\\n          <select formControlName=\\\"selectSurfaceRecon\\\" class=\\\"form-control border border-custom fs-14\\\">            \\n            <option *ngFor=\\\"let recon of surfaceRecons\\\" [ngValue]=\\\"recon[1]\\\">\\n              {{recon[0]}}\\n            </option>\\n          </select>\\n          <small *ngIf=\\\"selectSurfaceRecon.invalid && (selectSurfaceRecon.touched || allAlerts)\\\"\\n           class=\\\"text-danger ml-1\\\"\\n          >\\n          You need to select Surface reconstruction\\n          </small>\\n        </div>\\n      </div>\\n      <div class=\\\"col-12 col-md-6\\\">\\n        <div class=\\\"form-group mb-4\\\">\\n          <label for=\\\"surfaceReconDepth\\\">Surface recon depth*</label>\\n          <input formControlName=\\\"surfaceReconDepth\\\" type=\\\"text\\\" class=\\\"form-control border border-custom fs-14\\\">\\n          <small *ngIf=\\\"surfaceReconDepth.invalid && (surfaceReconDepth.touched || allAlerts)\\\"\\n           class=\\\"text-danger ml-1\\\"\\n          >\\n          You need to select surface reconstruction depth\\n          </small>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-12 col-md-6\\\">\\n        <div class=\\\"form-group form-check mb-4\\\">\\n          <input formControlName=\\\"checkSurfaceReconColor\\\" type=\\\"checkbox\\\" class=\\\"form-check-input\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"checkSurfaceReconColor\\\">Surface recon colour</label>\\n          <small class=\\\"form-text text-muted\\\">Whether or not to have colour on the surface recon ply</small>\\n        </div>\\n      </div>\\n      <div class=\\\"col-12 col-md-6\\\">\\n        <div class=\\\"form-group mb-4\\\">\\n          <label for=\\\"poissonSampleRate\\\">Poisson recon sample per node </label>\\n          <input formControlName=\\\"poissonSampleRate\\\" type=\\\"text\\\" class=\\\"form-control border border-custom fs-14\\\">\\n          <small class=\\\"form-text text-muted\\\">Only if PoissonRecon is selected</small>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-12 col-md-6\\\">\\n        <div class=\\\"form-group form-check mb-4\\\">\\n          <input formControlName=\\\"checkPoissonReconDensity\\\" type=\\\"checkbox\\\" class=\\\"form-check-input\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"checkPoissonReconDensity\\\">Poisson recon density</label>\\n          <small class=\\\"form-text text-muted\\\">Only if PoissonRecon is selected. Select to output density if you wish to trim</small>\\n        </div>\\n      </div>\\n      <div class=\\\"col-12 col-md-6\\\">\\n        <div class=\\\"form-group mb-4\\\">\\n          <label for=\\\"ssdReconDegree\\\">Ssd recon degree</label>\\n          <input formControlName=\\\"ssdReconDegree\\\" type=\\\"text\\\" class=\\\"form-control border border-custom fs-14\\\">\\n          <small class=\\\"form-text text-muted\\\">Only if SSDRecon is selected</small>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-12 col-md-6\\\">\\n        <div class=\\\"form-group form-check mb-4\\\">\\n          <input formControlName=\\\"checkSurfaceTrim\\\" type=\\\"checkbox\\\" class=\\\"form-check-input\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"checkSurfaceTrim\\\">Surface trim</label>\\n          <small class=\\\"form-text text-muted\\\">Trim surface? Only valid for Poisson reconstruction with density output</small>\\n        </div>\\n      </div>\\n      <div class=\\\"col-12 col-md-6\\\">\\n        <div class=\\\"form-group mb-4\\\">\\n          <label for=\\\"surfaceTrimThreshold\\\">Surface trim threshold</label>\\n          <input formControlName=\\\"surfaceTrimThreshold\\\" type=\\\"text\\\" class=\\\"form-control border border-custom fs-14\\\">\\n          <small class=\\\"form-text text-muted\\\">Only if Surface trim is selected</small>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-12 col-md-6\\\">\\n        <div class=\\\"form-group form-check mb-4\\\">\\n          <input formControlName=\\\"checkPolygonMesh\\\" type=\\\"checkbox\\\" class=\\\"form-check-input\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"checkPolygonMesh\\\">Surface trim polygon mesh</label>\\n          <small class=\\\"form-text text-muted\\\">Only if Surface trim is selected</small>\\n        </div>\\n      </div>\\n      <div class=\\\"col-12 col-md-6\\\">\\n        <div class=\\\"form-group mb-4\\\">\\n          <label for=\\\"surfaceTrimSmooth\\\">Surface trim smooth</label>\\n          <input formControlName=\\\"surfaceTrimSmooth\\\" type=\\\"text\\\" class=\\\"form-control border border-custom fs-14\\\">\\n          <small class=\\\"form-text text-muted\\\">Only if Surface trim is selected</small>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-12 col-md-6\\\">\\n        <div class=\\\"form-group mb-4\\\">\\n          <label for=\\\"jobNote\\\">Job Note</label>\\n          <input formControlName=\\\"jobNote\\\" type=\\\"text\\\" class=\\\"form-control border border-custom fs-14\\\" placeholder=\\\"Enter a job note\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"col-12 col-md-6\\\">\\n        <div class=\\\"form-group mb-4\\\">\\n          <label for=\\\"selectJobPriority\\\">Job priority*</label>\\n          <select formControlName=\\\"selectJobPriority\\\" class=\\\"form-control border border-custom fs-14\\\">            \\n            <option *ngFor=\\\"let jobPriority of jobPriorities\\\" [ngValue]=\\\"jobPriority[1]\\\">\\n              {{jobPriority[0]}}\\n            </option>\\n          </select>\\n          <small *ngIf=\\\"selectJobPriority.invalid && (selectJobPriority.touched || allAlerts)\\\"\\n                  class=\\\"text-danger ml-1\\\"\\n          >\\n          You need to select a job priority\\n          </small>          \\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-outline-custom w-25 mx-auto my-4\\\">\\n        Update\\n      </button>\\n    </div>\\n  </form>\\n</div>\\n\\n<div *ngIf=\\\"!showComponent\\\" class=\\\"text-center mt-4\\\">\\n  {{errorMsg}}\\n</div>\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiService } from 'src/app/services/api.service';\nimport { DataSharingService } from 'src/app/services/data-sharing.service';\n\n@Component({\n  selector: 'app-job-update',\n  templateUrl: './job-update.component.html',\n  styleUrls: ['./job-update.component.css']\n})\nexport class JobUpdateComponent implements OnInit {\n\n  constructor(private apiService: ApiService, private fb: FormBuilder, private router:Router, private activatedRoute:ActivatedRoute, private dataSharingService: DataSharingService) { }\n\n  jobUpdateForm: FormGroup\n\n  imageCollections\n  genModels=[['Global','GLB'],['Sequential','SEQ']]\n  surfaceRecons=[['Poisson Reconstruction','PR'],['SSD Reconstruction','SR']]\n  jobPriorities=[['High','H'],['Medium','M'],['Low','L']]\n  showComponent\n  errorMsg\n  updateSubmitErrors\n  \n  allAlerts:boolean=false\n  jobId\n\n  headers= {\n    \"Content-Type\":\"application/json\"\n  }\n\n  filterItem(itemsArray,value){\n    return itemsArray.filter(item=>item[1]===value)\n  }\n\n  ngOnInit() {    \n    this.activatedRoute.paramMap.subscribe(params=>{\n      this.updateSubmitErrors = \"\"\n      this.jobId = params.get('id')    \n      this.jobUpdateForm = this.fb.group({\n        jobName:['',[Validators.required,Validators.minLength(1)]],\n        jobDesc:[''],\n        selectImageCollection:[null,[Validators.required]],\n        selectGenModel:[null,[Validators.required]],\n        checkFocalLen:[false],\n        focalLen:[''],\n        selectSurfaceRecon:[null,[Validators.required]],\n        surfaceReconDepth:['',[Validators.required]],       \n        checkSurfaceReconColor:[false],\n        poissonSampleRate:[''],\n        checkPoissonReconDensity:[false],\n        ssdReconDegree:[''],\n        checkSurfaceTrim:[false],\n        surfaceTrimThreshold:[''],\n        checkPolygonMesh:[false],\n        surfaceTrimSmooth:[''],\n        jobNote:[''],\n        selectJobPriority:[null,[Validators.required]]\n       })\n      \n      this.apiService.callApi(`/api/job/${this.jobId}/update/`,'GET')\n      .subscribe({\n        next:res=>{\n         this.showComponent = res['code']==200 && true\n         let data=res['data']         \n         this.imageCollections = data.userImagesCollection                \n         let selectedImages = this.imageCollections.filter(item=>item.selected===true).map(item=>item.id)\n         \n         this.jobUpdateForm.patchValue({\n          jobName:data.job_name,\n          jobDesc:data.job_description,\n          selectImageCollection:selectedImages,\n          selectGenModel:data.gen_model,\n          checkFocalLen:data.force_focal_len_calc,\n          focalLen:data.focal_len,\n          selectSurfaceRecon:data.surface_recon,\n          surfaceReconDepth:data.surface_recon_depth,\n          checkSurfaceReconColor:data.surface_recon_colour,\n          poissonSampleRate:data.poisson_recon_sample_per_node,\n          checkPoissonReconDensity:data.poisson_recon_density,\n          ssdReconDegree:data.ssd_recon_degree,\n          checkSurfaceTrim:data.surface_trim,\n          surfaceTrimThreshold:data.surface_trim_trim_threshold,\n          checkPolygonMesh:data.surface_trim_polygon_mesh,\n          surfaceTrimSmooth:data.surface_trim_smooth,\n          jobNote:data.job_note,\n          selectJobPriority:data.job_priority\n         })\n         this.jobUpdateForm.updateValueAndValidity() \n        },\n        error:res=>{\n          this.errorMsg=res.error.errors[0]\n          this.showComponent=false\n        }          \n      })\n      this.jobUpdateForm.controls['checkSurfaceReconColor'].disable()  \n    })\n  }\n\n  get jobName(){\n    return this.jobUpdateForm.get('jobName')\n  }\n  get selectImageCollection(){\n    return this.jobUpdateForm.get('selectImageCollection')\n  }\n  get selectGenModel(){\n    return this.jobUpdateForm.get('selectGenModel')\n  }\n  get selectSurfaceRecon(){\n    return this.jobUpdateForm.get('selectSurfaceRecon')\n  }\n  get surfaceReconDepth(){\n    return this.jobUpdateForm.get('surfaceReconDepth')\n  }\n  get selectJobPriority(){\n    return this.jobUpdateForm.get('selectJobPriority')\n  }\n\n  updateJob(){\n    if(this.jobUpdateForm.invalid){\n      this.allAlerts = true\n      return null\n    }\n    \n    let payloadData={\n      job_name: this.jobUpdateForm.value.jobName,\n      job_description: this.jobUpdateForm.value.jobDesc,\n      userImagesCollection: this.jobUpdateForm.value.selectImageCollection, \n      gen_model: this.jobUpdateForm.value.selectGenModel,\n      force_focal_len_calc: this.jobUpdateForm.value.checkFocalLen,\n      focal_len: this.jobUpdateForm.value.focalLen,\n      surface_recon:this.jobUpdateForm.value.selectSurfaceRecon,\n      surface_recon_depth:this.jobUpdateForm.value.surfaceReconDepth,           \n      surface_recon_colour: this.jobUpdateForm.value.checkSurfaceReconColor,      \n      poisson_recon_sample_per_node: this.jobUpdateForm.value.poissonSampleRate,\n      poisson_recon_density: this.jobUpdateForm.value.checkPoissonReconDensity,\n      ssd_recon_degree: this.jobUpdateForm.value.ssdReconDegree,\n      surface_trim: this.jobUpdateForm.value.checkSurfaceTrim,\n      surface_trim_trim_threshold: this.jobUpdateForm.value.surfaceTrimThreshold,\n      surface_trim_polygon_mesh: this.jobUpdateForm.value.checkPolygonMesh,\n      surface_trim_smooth: this.jobUpdateForm.value.surfaceTrimSmooth,\n      job_note: this.jobUpdateForm.value.jobNote,\n      job_priority: this.jobUpdateForm.value.selectJobPriority\n    }        \n    \n    this.apiService.callApi(`/api/job/${this.jobId}/update/`,'POST',JSON.stringify(payloadData),this.headers)\n    .subscribe({\n      next:res=>{            \n        this.dataSharingService.changeData('jobUpdated')   \n        this.router.navigate([`/jobs/job-description/${this.jobId}`])        \n      },\n      error:res=>{      \n        this.updateSubmitErrors = res.error.errors       \n        window.scroll(0,0) \n      }\n    })\n  }\n}\n","module.exports = \".sidebarBefore{\\n    display:flex;    \\n    transition:all .5s;\\n}\\n.sidebarAfter{    \\n    display:none;\\n    transition:all .5s;\\n}\\n.toggleBtn{\\n    position:absolute;         \\n    padding:5px;\\n    border:none;\\n    background:none;\\n    display:flex;\\n    justify-content: center;\\n    align-items: center;\\n}\\n.outletStyle{\\n    margin:0px 50px;  \\n}\"","module.exports = \"<section class=\\\"mt-5\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"row\\\">                 \\n        <app-sidebar class=\\\"card card-body bg-light shadow sidebar\\\" [showToggleBtn]=\\\"true\\\"\\n                     [ngClass]=\\\"ngClassSidebar\\\" (toggleBtn)=\\\"toggleBtnAction()\\\"\\n        >\\n        </app-sidebar>  \\n        <div class=\\\"mt-4\\\" [ngClass]=\\\"ngClassContent\\\">\\n          <button *ngIf=\\\"showSidebarBtn\\\" type=\\\"button\\\" #sidebarToggleBtn class=\\\"toggleBtn\\\"\\n                (click)=\\\"closeSidebar()\\\"  [ngStyle]=\\\"{'margin-top':'5px'}\\\"\\n          >             \\n            <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"20\\\" height=\\\"20\\\" fill=\\\"#17a2b8\\\" class=\\\"bi bi-arrow-right-square-fill\\\" viewBox=\\\"0 0 16 16\\\">\\n              <path d=\\\"M0 14a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2a2 2 0 0 0-2 2v12zm4.5-6.5h5.793L8.146 5.354a.5.5 0 1 1 .708-.708l3 3a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708-.708L10.293 8.5H4.5a.5.5 0 0 1 0-1z\\\"/>\\n            </svg>\\n          </button>   \\n          <div [ngClass]=\\\"showSidebarBtn && 'outletStyle'\\\" [ngStyle]=\\\"{'margin-top':'8px'}\\\">\\n            <router-outlet></router-outlet>                                \\n          </div>                 \\n        </div>              \\n      </div>\\n    </div>\\n</section>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-jobs-root',\n  templateUrl: './jobs-root.component.html',\n  styleUrls: ['./jobs-root.component.css']\n})\nexport class JobsRootComponent implements OnInit {    \n\n  showSidebarBtn=false\n  ngClassSidebar=\"col-lg-3 sidebarBefore\"\n  ngClassContent=\"col-lg-9 contentBefore\"\n  \n  constructor() {}  \n  ngOnInit(){}\n\n  toggleBtnAction(){\n    this.ngClassSidebar = \"col-lg-0 sidebarAfter\"\n    this.ngClassContent = \"col-lg-12 contentAfter\"\n    this.showSidebarBtn = true\n  }\n\n  closeSidebar(){\n    this.ngClassSidebar=\"col-lg-3 sidebarBefore\"\n    this.ngClassContent=\"col-lg-9 contentBefore\"\n    this.showSidebarBtn=false\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AssociatedJobsComponent } from './associated-jobs/associated-jobs.component';\n\nimport { JobCreateComponent } from './job-create/job-create.component';\nimport { JobDescriptionComponent } from './job-description/job-description.component';\nimport { JobUpdateComponent } from './job-update/job-update.component';\nimport { JobsRootComponent } from './jobs-root/jobs-root.component';\n\nconst routes:Routes = [\n  {\n    path:\"\",\n    component:JobsRootComponent,\n    children:[\n      {path:'update-job/:id',component:JobUpdateComponent},\n      {path:'create-job',component:JobCreateComponent},\n      {path:'job-description/:id',component:JobDescriptionComponent},\n      {path:'associated-jobs/:id',component:AssociatedJobsComponent},\n      {\n        path: '', \n        loadChildren: ()=> import(\"../ply-viewer/ply-viewer.module\").then(m=>m.PlyViewerModule)\n      }             \n    ]\n  }\n]\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\n\nexport class JobsRouteModule { }\n","import { NgModule } from '@angular/core';\n\nimport { CommonSharedModule } from 'src/app/shared/common-shared.module';\nimport { SharedSidebarModule } from 'src/app/shared/shared-sidebar.module';\nimport { JobsRouteModule } from './jobs-route.module';\n\nimport { JobsRootComponent } from './jobs-root/jobs-root.component';\nimport { JobCreateComponent } from './job-create/job-create.component';\nimport { JobUpdateComponent } from './job-update/job-update.component';\nimport { JobDescriptionComponent } from './job-description/job-description.component';\nimport { AssociatedJobsComponent } from './associated-jobs/associated-jobs.component';\n\n\n@NgModule({\n  imports: [        \n    CommonSharedModule,    \n    SharedSidebarModule,    \n    JobsRouteModule,    \n  ],\n  declarations: [\n    JobsRootComponent,\n    JobCreateComponent,\n    JobUpdateComponent,\n    JobDescriptionComponent,     \n    AssociatedJobsComponent      \n  ],\n  providers:[]\n})\nexport class JobsModule { }\n"],"sourceRoot":""}